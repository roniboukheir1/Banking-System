// <auto-generated />
using System;
using BankingSystem.Persistance.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BankingSystem.Persistance.Migrations
{
    [DbContext(typeof(BankingSystemContext))]
    [Migration("20240817195114_AddTenantTable")]
    partial class AddTenantTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BankingSystem.Domain.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Accountnumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("accountnumber");

                    b.Property<decimal>("Balance")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("balance");

                    b.Property<int>("Branchid")
                        .HasColumnType("integer")
                        .HasColumnName("branchid");

                    b.Property<int>("Customerid")
                        .HasColumnType("integer")
                        .HasColumnName("customerid");

                    b.HasKey("Id")
                        .HasName("accounts_pkey");

                    b.HasIndex("Customerid");

                    b.HasIndex(new[] { "Accountnumber" }, "accounts_accountnumber_key")
                        .IsUnique();

                    b.ToTable("accounts", (string)null);
                });

            modelBuilder.Entity("BankingSystem.Domain.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("customers_pkey");

                    b.HasIndex(new[] { "Name" }, "customers_name_key")
                        .IsUnique();

                    b.ToTable("customers", "branch1");
                });

            modelBuilder.Entity("BankingSystem.Domain.Models.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasDefaultValueSql("nextval('event_id_seq'::regclass)");

                    b.Property<string>("Eventdata")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("eventdata");

                    b.Property<DateTime>("Eventdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("eventdate")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Eventtype")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("eventtype");

                    b.HasKey("Id")
                        .HasName("event_pkey");

                    b.ToTable("events", (string)null);
                });

            modelBuilder.Entity("BankingSystem.Domain.Models.Tenant", b =>
                {
                    b.Property<Guid>("TenantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("tenant_id");

                    b.Property<string>("ConnectionString")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("connection_string");

                    b.Property<byte[]>("EncryptedTenantKey")
                        .IsRequired()
                        .HasColumnType("bytea")
                        .HasColumnName("encrypted_tenant_key");

                    b.Property<string>("TenantName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("tenant_name");

                    b.HasKey("TenantId")
                        .HasName("tenant_pkey");

                    b.ToTable("tenants", "public");
                });

            modelBuilder.Entity("BankingSystem.Domain.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Accountid")
                        .HasColumnType("integer")
                        .HasColumnName("accountid");

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("amount");

                    b.Property<DateTime>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("date")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("transactions_pkey");

                    b.HasIndex("Accountid");

                    b.ToTable("transactions", "branch1");
                });

            modelBuilder.Entity("BankingSystem.Persistance.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasDefaultValueSql("nextval('employee_id_seq'::regclass)");

                    b.Property<int>("Branchid")
                        .HasColumnType("integer")
                        .HasColumnName("branchid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("role");

                    b.HasKey("Id")
                        .HasName("employee_pkey");

                    b.ToTable("employees", (string)null);
                });

            modelBuilder.Entity("BankingSystem.Domain.Models.Account", b =>
                {
                    b.HasOne("BankingSystem.Domain.Models.Customer", "Customer")
                        .WithMany("Accounts")
                        .HasForeignKey("Customerid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("accounts_customerid_fkey");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("BankingSystem.Domain.Models.Transaction", b =>
                {
                    b.HasOne("BankingSystem.Domain.Models.Account", "Account")
                        .WithMany("Transactions")
                        .HasForeignKey("Accountid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("transactions_accountid_fkey");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("BankingSystem.Domain.Models.Account", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("BankingSystem.Domain.Models.Customer", b =>
                {
                    b.Navigation("Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
